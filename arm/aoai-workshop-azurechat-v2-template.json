{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "code_name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "一意となるプロジェクト名やコードネーム。"
            }
        },
        "storage_account_name": {
            "defaultValue": "[concat('stzenaoai', substring(newGuid(), 0, 7))]",
            "type": "String"
        }
    },
    "variables": {
        "functionAppName": "[concat('func-', toLower(parameters('code_name')))]",
        "appServicePlanName": "[concat('plan-', toLower(parameters('code_name')))]",
        "cosomosAccountName": "[concat('cosmos-', toLower(parameters('code_name')))]",
        "cosmosDatabaseName": "chat",
        "cosmosContainerName_history": "history",
        "cosmosContainerName_data": "azure",
        "cosmosContainerName_leases": "leases",
        "searchName": "[concat('srch-', toLower(parameters('code_name')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2023-11-01",
            "name": "[variables('searchName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "basic"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "Default",
                "publicNetworkAccess": "Enabled",
                "networkRuleSet": {
                    "ipRules": []
                },
                "encryptionWithCmk": {
                    "enforcement": "Unspecified"
                },
                "disableLocalAuth": false,
                "authOptions": {
                    "apiKeyOnly": {}
                },
                "semanticSearch": "disabled"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2023-09-15",
            "name": "[variables('cosomosAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enableBurstCapacity": false,
                "minimalTlsVersion": "Tls12",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "continuousModeProperties": {
                    "tier": "Continuous7Days"
                },
                "networkAclBypassResourceIds": [],
                "keysMetadata": {}
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2023-09-15",
            "name": "[format('{0}/{1}', variables('cosomosAccountName'), variables('cosmosDatabaseName'))]",
            "properties": {
                "resource": {
                    "id": "[variables('cosmosDatabaseName')]"
                },
                "options": {
                    "autoscaleSettings": {
                        "maxThroughput": 1000
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosomosAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2023-09-15",
            "name": "[format('{0}/{1}', format('{0}/{1}', variables('cosomosAccountName'), variables('cosmosDatabaseName')), variables('cosmosContainerName_history'))]",
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerName_history')]",
                    "partitionKey": {
                        "paths": [ "/userId" ],
                        "kind": "Hash"
                    },
                    "defaultTtl": 86400
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosomosAccountName'), variables('cosmosDatabaseName'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2023-09-15",
            "name": "[format('{0}/{1}', format('{0}/{1}', variables('cosomosAccountName'), variables('cosmosDatabaseName')), variables('cosmosContainerName_data'))]",
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerName_data')]",
                    "partitionKey": {
                        "paths": [ "/id" ],
                        "kind": "Hash"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosomosAccountName'), variables('cosmosDatabaseName'))]"
            ]
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2023-09-15",
            "name": "[format('{0}/{1}', format('{0}/{1}', variables('cosomosAccountName'), variables('cosmosDatabaseName')), variables('cosmosContainerName_leases'))]",
            "properties": {
                "resource": {
                    "id": "[variables('cosmosContainerName_leases')]",
                    "partitionKey": {
                        "paths": [ "/id" ],
                        "kind": "Hash"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosomosAccountName'), variables('cosmosDatabaseName'))]"
            ]
        },


        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "name": "[parameters('storage_account_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y"
            },
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp,linux",
            "properties": {
                "reserved": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "linuxFxVersion": "Python|3.11",
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storage_account_name'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storage_account_name'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name')), '2022-05-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(variables('functionAppName'))]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "python"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storage_account_name'))]"
            ]
        }
    ]
}